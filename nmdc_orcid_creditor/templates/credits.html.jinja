{% extends "base.html.jinja" %}
{% block body %}
    <h1>Credits</h1>
    <p>ORCID ID: {{ orcid_id }}</p>
    <div>
        <table>
            <thead>
                <tr>
                    <td>Credit</td>
                    <td>Notified at</td>
                    <td>Claimed at</td>
                    <td>Actions</td>
                </tr>
            </thead>
            <tbody>
                {% for credit in credits %}
                    <tr>
                        <td>{{ credit["column.CREDIT_TYPE"] }}</td>
                        <td data-timestamp="{{ credit["column.NOTIFIED_AT"] }}">{{ credit["column.NOTIFIED_AT"] }}</td>
                        <td data-timestamp="{{ credit["column.CLAIMED_AT"] }}">{{ credit["column.CLAIMED_AT"] }}</td>
                        <td>
                            {% if credit["column.CLAIMED_AT"] %}
                                <span>--</span>
                            {% else %}
                                <button class="claim" data-credit-type="{{ credit["column.CREDIT_TYPE"] }}">
                                    Add to ORCID
                                    profile
                                </button>
                            {% endif %}
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="4">There are no credits associated with this ORCID ID.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    <script>
        /**
         * Invoke a function once the page—including all dependent resources (e.g. stylesheets, scripts)—has loaded.
         */
        window.addEventListener("load", () => {
            /**
             * Replaces the raw timestamps in the table, with timestamp strings in UTC.
             *
             * References:
             * - https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes#javascript_access
             */
            const formatTimestamps = () => {
                const els = document.querySelectorAll("[data-timestamp]");
                els.forEach(function (el) {
                    const timestamp = el.dataset.timestamp.trim();
                    if (timestamp.length > 0) {
                        const date = new Date(timestamp);
                        el.innerText = date.toUTCString();
                    } else {
                        el.innerText = "--";
                    }
                });
            };

            /**
             * Sets up the buttons that can be used to claim a credit.
             */
            const setupClaimButtons = () => {
                const els = document.querySelectorAll("button.claim");
                const url = "{{ url_for("post_credits_claim") }}";
                els.forEach(function (el) {
                    const creditType = el.dataset.creditType.trim();
                    el.addEventListener("click", async () => {
                        // FIXME: Implement final response handling and error handling. Currently a PoC.
                        try {
                            const response = await fetch(url, {
                                method: "POST",
                                headers: {"Content-Type": "application/json"},
                                body: JSON.stringify({credit_type: creditType}),
                            });
                            if (response.ok) {
                                const json = await response.json();
                                alert(JSON.stringify(json));
                            } else {
                                throw new Error(`Response status: ${response.status}`);
                            }
                        } catch (error) {
                            alert(error.message);
                        }
                    });
                });
            };

            formatTimestamps();
            setupClaimButtons();
        });
    </script>
{% endblock %}
