[tool.poetry]
name = "nmdc-orcid-creditor"
version = "0.1.0"
description = "Web app NMDC team members use to credit ambassadors and champions via ORCID"
authors = []
readme = "README.md"
repository = "https://github.com/microbiomedata/nmdc-orcid-creditor"
homepage = "https://github.com/microbiomedata/nmdc-orcid-creditor"
documentation = "https://github.com/microbiomedata/nmdc-orcid-creditor"
keywords = ["orcid", "credit"]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = { extras = ["standard"], version = "^0.115.0" }
# We use `pydantic-settings` to access environment variables.
# Docs: https://fastapi.tiangolo.com/advanced/settings/#pydantic-settings
pydantic-settings = "^2.5.2"
# We use `authlib` to facilitate OAuth transactions between FastAPI and ORCID.
# Docs: https://docs.authlib.org/en/latest/client/fastapi.html
authlib = "^1.3.2"
# The `itsdangerous` package is required by the `SessionMiddleware` class.
# Reference: https://docs.authlib.org/en/latest/client/starlette.html
itsdangerous = "^2.2.0"
# We use `jinja2` to render HTML based upon templates.
# Docs: https://jinja.palletsprojects.com/
jinja2 = "^3.1.4"

[tool.poetry.group.dev.dependencies]
# We use `black` for code formatting.
# Usage: $ poetry run black --line-length 120 .
# Docs: https://black.readthedocs.io/en/stable/
black = "^24.8.0"
# We use `pytest` to run tests.
# Usage: $ poetry run pytest
# Docs: https://docs.pytest.org/en/stable/contents.html
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
# The `httpx` package is required by FastAPI's `TestClient` class.
# Reference: https://fastapi.tiangolo.com/tutorial/testing/#using-testclient
httpx = "^0.27.2"
# We use `djlint` to format jinja2 templates.
# Usage: $ poetry run djlint --extension jinja --reformat .
# Docs: https://www.djlint.com/
djlint = "^1.35.2"

[tool.pytest.ini_options]
# Make it so that, when someone runs `$ poetry run pytest`, in addition to running the tests,
# it also runs doctests defined within Python modules and (via the `pytest-cov` plugin)
# it also measures test coverage of the source code directory.
# References:
# - https://docs.pytest.org/en/stable/how-to/doctest.html#how-to-run-doctests
# - https://pytest-cov.readthedocs.io/en/latest/config.html#configuration
addopts = "--doctest-modules --cov=nmdc_orcid_creditor"

[tool.black]
# Make it so that, when someone runs `$ poetry run black`, these default CLI options are used.
# Reference: https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-format
line-length = 120

[tool.djlint]
# Make it so that, when someone runs `$ poetry run djlint`, these default CLI options are used.
# Reference: https://www.djlint.com/docs/configuration/
extension = "jinja"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
